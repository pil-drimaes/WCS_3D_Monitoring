spring.application.name=cdcQueue

# 서버 포트 설정 (Kafka UI와 포트 충돌 방지)
server.port=8081

# 로컬 DB 연결 설정 (이벤트 저장용)
spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=cdc_test;encrypt=true;trustServerCertificate=true
spring.datasource.username=sa
spring.datasource.password=nice2025!
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

# WCS DB 연결 설정 (ETL 풀링용) - 현재는 cdc_test를 WCS DB로 사용
spring.datasource.wcs.url=jdbc:sqlserver://localhost:1433;databaseName=cdc_test;encrypt=true;trustServerCertificate=true
spring.datasource.wcs.username=sa
spring.datasource.wcs.password=nice2025!
spring.datasource.wcs.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

# PostgreSQL DB 연결 설정 (실제 운영 DB 쓰기용)
spring.datasource.postgresql.url=jdbc:postgresql://localhost:5432/cdcqueue?sslmode=disable&connectTimeout=30&socketTimeout=30
spring.datasource.postgresql.username=cdcuser
spring.datasource.postgresql.password=cdcpassword
spring.datasource.postgresql.driver-class-name=org.postgresql.Driver

# JPA 설정
spring.jpa.hibernate.ddl-auto=none
spring.datasource.initialization-mode=never

# 로깅 설정
logging.level.com.example.cdcqueue.service=DEBUG
logging.level.com.example.cdcqueue.etl=DEBUG
logging.level.com.example.cdcqueue.engine=DEBUG

# ETL 설정
etl.pulling.interval=1000
etl.pulling.batch-size=100
etl.pulling.strategy=HYBRID
etl.validation.enabled=true
etl.transformation.enabled=true
etl.error-handling.mode=CONTINUE
etl.retry.count=3
etl.retry.interval=5000

# ETL 전용 데이터베이스 설정 
etl.database.url=jdbc:sqlserver://localhost:1433;databaseName=cdc_test;encrypt=true;trustServerCertificate=true
etl.database.username=sa
etl.database.password=nice2025!
etl.database.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver

# Kafka 설정
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.cdcqueue.*
spring.kafka.consumer.group-id=agv-etl-group

# Kafka 토픽 설정
kafka.topic.agv-data=agv-data-events
kafka.topic.etl-status=etl-status-events
kafka.topic.error-events=error-events

